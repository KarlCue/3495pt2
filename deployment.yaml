apiVersion: v1
kind: Service
metadata:
  name: authentication
spec:
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
        - name: authentication
          image: karlcue/authentication:v1
---
apiVersion: v1
kind: Service
metadata:
  name: enter-data
spec:
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: enter-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enter-data
  template:
    metadata:
      labels:
        app: enter-data
    spec:
      containers:
        - name: enter-data
          image: karlcue/enter-data:v1
          ports:
            - containerPort: 5000
          env:
            - name: MYSQL_HOST
              value: "mysql-db"
            - name: MYSQL_PASSWORD
              value: "SeCur3Pas5w0rd"
            - name: AUTH_URL
              value: "http://authentication:3000"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
spec:
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: mysql-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: mysql:latest
          env:
            - name: MYSQL_DATABASE
              value: "data-db"
            - name: MYSQL_ROOT_PASSWORD
              value: "SeCur3Pas5w0rd"
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "user"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "Secur3PAssw0rd"
---
apiVersion: v1
kind: Service
metadata:
  name: show-results
spec:
  ports:
    - protocol: TCP
      port: 5004
      targetPort: 5004
  selector:
    app: show-results
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: show-results
spec:
  replicas: 1
  selector:
    matchLabels:
      app: show-results
  template:
    metadata:
      labels:
        app: show-results
    spec:
      containers:
        - name: show-results
          image: karlcue/show-results:v1
          ports:
            - containerPort: 5004
          env:
            - name: MONGO_HOST
              value: "mongo"
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_PASSWORD
              value: "Secur3PAssw0rd"
            - name: MONGO_USERNAME
              value: "user"
            - name: AUTH_URL
              value: "http://authentication:3000"
---
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
spec:
  selector:
    app: analytics-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
    spec:
      containers:
        - name: analytics-service
          image: karlcue/analytics:v1
          env:
            - name: MYSQL_HOST
              value: "mysql-db"
            - name: MYSQL_PASSWORD
              value: "SeCur3Pas5w0rd"
            - name: MONGO_HOST
              value: "mongo"
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_PASSWORD
              value: "Secur3PAssw0rd"
            - name: MONGO_USERNAME
              value: "user"
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: show-results-hpa
spec:
  scaleTargetRef:
    apiVersion: v1
    kind: Service
    name: show-results
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 1

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: enter-data-hpa
spec:
  scaleTargetRef:
    apiVersion: v1
    kind: Deployment 
    name: enter-data
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 1
---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: authentication-hpa
spec:
  scaleTargetRef:
    apiVersion: v1
    kind: Deployment  
    name: authentication
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 1
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: analytics-hpa
spec:
  scaleTargetRef:
    apiVersion: v1
    kind: Deployment  
    name: analytics
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 1

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mongo-hpa
spec:
  scaleTargetRef:
    apiVersion: v1
    kind: Deployment 
    name: mongo
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 1

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mysql-db-hpa
spec:
  scaleTargetRef:
    apiVersion: v1
    kind: Deployment  
    name: mysql-db
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 1

