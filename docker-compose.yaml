services:
  authentication:
    restart: always
    build:
      context: ./authentication
      dockerfile: Dockerfile
    container_name: authentication
    image: authentication
    networks:
      - app-network
  enter-data:
    restart: always
    build:
      context: ./enter-data
      dockerfile: Dockerfile
    container_name: enter-data
    image: enter-data
    environment:
      - MYSQL_HOST=mysql-db
      - MYSQL_PASSWORD=SeCur3Pas5w0rd
      - AUTH_URL=http://authentication:3000
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - mysql-db
      - authentication
  mysql-db:
    restart: always
    image: mysql:latest
    container_name: mysql-db
    environment:
      - MYSQL_DATABASE=data-db
      - MYSQL_ROOT_PASSWORD=SeCur3Pas5w0rd
    networks:
      -  app-network
    volumes:
      - ./mysql:/var/lib/mysql
  mongo:
    volumes:
      - ./mongo:/data/db
    container_name: mongo
    networks:
    -  app-network
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=Secur3PAssw0rd
  show-results:
    restart: always
    build:
      context: ./show-results
      dockerfile: Dockerfile
    container_name: show-results
    image: show-results
    environment:
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_PASSWORD=Secur3PAssw0rd
      - MONGO_USERNAME=user
      - AUTH_URL=http://authentication:3000
    networks:
      - app-network
    depends_on:
      - mongo
      - authentication
    volumes:
      - ./show-results:/usr/src/app
    ports:
      - "5004:5004"
  analytics-service:
    restart: always
    build:
      context: ./analytics
      dockerfile: Dockerfile
    container_name: analytics
    image: analytics-service
    environment:
      - MYSQL_HOST=mysql-db
      - MYSQL_PASSWORD=SeCur3Pas5w0rd
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_PASSWORD=Secur3PAssw0rd
      - MONGO_USERNAME=user
    networks:
      - app-network
    depends_on:
      - mongo
      - mysql-db
networks:
  app-network:
    driver: bridge
